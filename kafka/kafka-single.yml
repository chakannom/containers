services:
  kafka-single:
    image: confluentinc/cp-kafka:7.3.3
    hostname: kafka-single
    restart: unless-stopped
    depends_on:
      zookeeper-single:
        condition: service_started
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1                               # kafka 브로커 아이디를 지정
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-single:2181' # zookeeper에 커넥션하기 위한 대상
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-single:9092,PLAINTEXT_HOST://localhost:29092 # 외부에서 접속하기 위한 리스너 설정
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT # 보안을 위한 프로토콜 매핑
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT      # 도커 내부에서 사용할 리스너 이름
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1        # single 브로커인경우에 지정하여 1로 설정 (멀티 브로커는 기본값을 사용하므로 이 설정이 필요 없음)
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0        # 카프카 그룹이 초기 리밸런싱할때 컨슈머들이 컨슈머 그룹에 조인할때 대기 시간
    container_name: kafka-single

  zookeeper-single:
    image: confluentinc/cp-zookeeper:7.3.3
    hostname: zookeeper-single
    restart: unless-stopped
    ports:
      - 22181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1      # zookeeper 클러스터에서 유일하게 주키퍼를 식별할 아이디
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000   # zookeeper이 클러스터를 구성할때 동기화를 위한 기본 틱 타임 (millisecond)
      ZOOKEEPER_INIT_LIMIT: 5     # 주키퍼 초기화를 위한 제한 시간 (ex: 2000(ZOOKEEPER_TICK_TIME) * 5 = 10000 ms)
      ZOOKEEPER_SYNC_LIMIT: 2     # 주키퍼 리더와 나머지 서버들의 싱크 타임 (ex: 2000(ZOOKEEPER_TICK_TIME) * 2 = 4000 ms)
    container_name: zookeeper-single
